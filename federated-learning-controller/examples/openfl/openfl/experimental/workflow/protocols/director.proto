// Copyright 2020-2024 Intel Corporation
// SPDX-License-Identifier: Apache-2.0

syntax = "proto3";

package openfl.experimental.workflow.director;

import "google/protobuf/timestamp.proto";
import "google/protobuf/duration.proto";

service Director {
    //Envoy RPCs
    rpc EnvoyConnectionRequest(SendConnectionRequest) returns (RequestAccepted) {}
    rpc WaitExperiment(WaitExperimentRequest) returns (WaitExperimentResponse) {}
    rpc GetExperimentData(GetExperimentDataRequest) returns (stream ExperimentData) {}
    rpc UpdateEnvoyStatus(UpdateEnvoyStatusRequest) returns (UpdateEnvoyStatusResponse) {}

    //Runtime RPCs
    rpc SetNewExperiment(stream ExperimentInfo) returns (SetNewExperimentResponse) {}
    rpc GetEnvoys(GetEnvoysRequest) returns (GetEnvoysResponse) {}
    rpc GetFlowState(GetFlowStateRequest) returns (GetFlowStateResponse) {}
    rpc ConnectRuntime(SendRuntimeRequest) returns (RuntimeRequestResponse) {}
    rpc GetExperimentStdout(GetExperimentStdoutRequest) returns (stream GetExperimentStdoutResponse) {}
}

message SendConnectionRequest {
    string envoy_name = 1;
}

message RequestAccepted {
    bool accepted = 1;
}

message WaitExperimentRequest {
    string collaborator_name = 1;
}

message WaitExperimentResponse {
    string experiment_name = 1;
}

message GetExperimentDataRequest {
    string experiment_name = 1;
    string collaborator_name = 2;
}

message ExperimentData {
    uint32 size = 1;
    bytes exp_data = 2;
}

message UpdateEnvoyStatusRequest {
    string name = 1;
    bool is_experiment_running = 2;
}

message UpdateEnvoyStatusResponse {
    google.protobuf.Duration health_check_period = 1;
}

message ExperimentInfo {
    string name = 1;
    repeated string collaborator_names = 2;
    ExperimentData experiment_data = 3;
}

message SetNewExperimentResponse {
    bool status = 1;
}

message EnvoyInfo {
    string envoy_name = 1;
    string experiment_name = 2;
    bool is_online = 3;
    bool is_experiment_running = 4;
    google.protobuf.Timestamp last_updated = 5;
    google.protobuf.Duration valid_duration = 6;
}

message GetEnvoysRequest {}

message GetEnvoysResponse {
    repeated EnvoyInfo envoy_infos = 1;
}

message GetFlowStateRequest {}

message GetFlowStateResponse {
    bool completed = 1;
    bytes flspec_obj = 2;
}

message SendRuntimeRequest {}

message RuntimeRequestResponse {
    bool accepted = 1;
}

message GetExperimentStdoutRequest {
    string experiment_name = 1;
}

message GetExperimentStdoutResponse {
    string stdout_origin = 1;
    string task_name = 2;
    string stdout_value = 3;
}
